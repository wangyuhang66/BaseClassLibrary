区别与比较：

通过对概念的澄清和历史的回溯，我们知道特性和属性只是在名称上有过纠葛，在MSDN上关于attribute的中文解释甚至还是属性，但是我同意更通常的称呼：特性。在功能上和应用上，二者其实没有太多模糊的概念交叉，因此也没有必要来比较其应用的异同点。本文则以特性的概念为重点，来讨论其应用的场合和规则。

我理解的定制特性，就是为目标元素，可以是数据集、模块、类、属性、方法、甚至函数参数等加入附加信息，类似于注释，但是可以在运行期以反射的方式获得。定制特性主要应用在序列化、编译器指令、设计模式等方面。

通用规则：

定制特性可以应用的目标元素可以为：程序集(assembly)、模块(module)、类型(type)、属性(property)、事件(event)、字段(field)、方法(method)、参数(param)、返回值(return)，应该全了。
定制特性以[,]形式展现，放在紧挨着的元素上，多个特性可以应用于同一元素，特性间以逗号隔开，以下表达规则有效：[AttributeUsage][ Flags]、[AttributeUsage, Flags]、[Flags, AttibuteUsageAttribute]、[AttributeUsage(), FlagesAttribute()]
attibute实例，是在编译期进行初始化，而不是运行期。
C#允许以指定的前缀来表示特性所应用的目标元素，建议这样来处理，因为显式处理可以消除可能带来的二义性。


他山之石：

MSDN认为，特性 (Attribute) 描述如何将数据序列化，指定用于强制安全性的特性，并限制实时 (JIT) 编译器的优化，
从而使代码易于调试。属性 (Attribute) 还可以记录文件名或代码作者，或在窗体开发阶段控制控件和成员的可见性。
dudu Boss收藏的系列文章《Attribute在.net编程中的应用》，给你应用方面的启示会很多，值得研究。
亚历山大同志 的系列文章《手把手教你写ORM（六）》中，也有很好的诠释。
idior的文章《Remoting基本原理及其扩展机制》也有收获，因此补充。

 结论：
 Attribute是.NET引入的一大特色技术，但在博客园中讨论的不是很多，所以拿出自己的体会来分享，
 希望就这一技术要点进行一番登堂入室的引导。更深层次的应用，例如序列化、程序安全性、设计模式多方面都可以挖掘出闪耀的金子，
 这就是.NET在技术领域带来的百变魅力吧。
 希望大家畅所欲言，来完善和补充作者在这方面的不全面和认知上的不深入，那将是作者最大的鼓励和动力。
