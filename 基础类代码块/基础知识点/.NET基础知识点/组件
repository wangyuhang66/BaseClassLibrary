组件编程基础（一）什么是组件？ 
一、组件概念 
简而言之，组件就是对象。C++ Builder中叫组件，Delphi中叫部件，而在Visual BASIC中叫控件。 
组件是对数据和方法的简单封装。C++ Builder中，一个组件就是一个从TComponent派生出来的特定对象。组件可以有自己的属性和方法。属性是组件数据的简单访问者。方法则是组件的一些简单而可见的功能。 
组件是C++ Builder环境中最令人激动的部分。使用组件可以实现拖放式编程、快速的属性处理以及真正的面向对象的设计。VCL和CLX组件是C++ Builder系统的核心。 
二、组件应用 
使用现成的组件来开发应用程序时，组件工作在两种模式下：设计时态和运行时态。 
在设计时态下，组件显示在C++ Builder窗体编辑器下的一个窗体中。设计时态下组件的方法不能被调用，组件不能与最终用户直接进行交互操作，也不需要实现组件的全部功能。 
在运行状态下，组件工作在一个确实已经运行的应用程序中。组件必须正确地将自身表示出来，它需要对方法的调用进行处理并实现与其他组件之间有效的协同工作。 
设计时态下所有的组件在窗体中都是可见的，但在运行时态下不一定可见。如TTable、TQuery和TDataSet在运行时态下就不可见，但他们均完成了重要的功能。 
三、组件创建 
创建组件就是自行设计制作出新的组件。 
设计组件是一项繁重的工作。自行开发组件与使用组件进行可视化程序开发存在着极大的不同，要求程序员熟知原有的VCL类库结构，精通面向对象程序设计。 
设计组件是一项艰苦的工作。对于组件的开发者，组件是纯粹的代码。组件的开发不是一个可视化的开发过程，而是用C++或Object Pascal严格编制代码的工作。实际上，创建新组件使我们回到传统开发工具的时代。虽然这是一个复杂的过程，但也是一个一劳永逸的过程。 
创建组件的最大意义在于封装重复的工作，其次是可以扩充现有组件的功能。 
组件创建过程包括设计、开发、调试（就是所谓的3D's）工作，然后是组件的使用。 
组件开发者应该掌握的三项主要内容是：属性、事件和方法。